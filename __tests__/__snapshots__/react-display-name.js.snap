// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react-display-name test suite Transforms class components 1`] = `
"\\"use strict\\";

function _typeof(obj) { \\"@babel/helpers - typeof\\"; if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\"symbol\\" : typeof obj; }; } return _typeof(obj); }

require(\\"core-js/modules/es.object.to-string.js\\");

require(\\"core-js/modules/es.reflect.to-string-tag.js\\");

require(\\"core-js/modules/es.reflect.construct.js\\");

require(\\"core-js/modules/es.symbol.js\\");

require(\\"core-js/modules/es.symbol.description.js\\");

require(\\"core-js/modules/es.symbol.iterator.js\\");

require(\\"core-js/modules/es.array.iterator.js\\");

require(\\"core-js/modules/es.string.iterator.js\\");

require(\\"core-js/modules/web.dom-collections.iterator.js\\");

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = void 0;

require(\\"core-js/modules/es.object.get-prototype-of.js\\");

var _react = _interopRequireDefault(require(\\"react\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\"value\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== \\"function\\" && superClass !== null) { throw new TypeError(\\"Super expression must either be null or a function\\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) { return call; } else if (call !== void 0) { throw new TypeError(\\"Derived constructors may only return object or undefined\\"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === \\"undefined\\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \\"function\\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MyClassComponent = /*#__PURE__*/function (_React$Component) {
  _inherits(MyClassComponent, _React$Component);

  var _super = _createSuper(MyClassComponent);

  function MyClassComponent() {
    _classCallCheck(this, MyClassComponent);

    return _super.apply(this, arguments);
  }

  _createClass(MyClassComponent, [{
    key: \\"render\\",
    value: function render() {
      return /*#__PURE__*/_react.default.createElement(\\"div\\", null, \\"1\\");
    }
  }]);

  return MyClassComponent;
}(_react.default.Component);

MyClassComponent.displayName = \\"MyClassComponent\\";
var _default = MyClassComponent;
exports.default = _default;"
`;

exports[`react-display-name test suite Transforms function components 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require(\\"react\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MyFunctionComponent() {
  return /*#__PURE__*/_react.default.createElement(\\"div\\", null, \\"1\\");
}

MyFunctionComponent.displayName = \\"MyFunctionComponent\\";
var _default = MyFunctionComponent;
exports.default = _default;"
`;

exports[`react-display-name test suite Transforms function expression components 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require(\\"react\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MyFunctionExpressionComponent = function MyFunctionExpressionComponent() {
  return /*#__PURE__*/_react.default.createElement(\\"div\\", null, \\"1\\");
};

MyFunctionExpressionComponent.displayName = \\"MyFunctionExpressionComponent\\";
var _default = MyFunctionExpressionComponent;
exports.default = _default;"
`;
